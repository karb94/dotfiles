

#    $$$$$$\    $$\   $$\
#   $$  __$$\   $$ |  \__|
#   $$ /  $$ |  $$ |  $$\   $$$$$$\    $$$$$$$\
#   $$$$$$$$ |  $$ |  $$ |  \____$$\  $$  _____|
#   $$  __$$ |  $$ |  $$ |  $$$$$$$ | \$$$$$$\
#   $$ |  $$ |  $$ |  $$ | $$  __$$ |  \____$$\
#   $$ |  $$ |  $$ |  $$ | \$$$$$$$ | $$$$$$$  |
#   \__|  \__|  \__|  \__|  \_______| \_______/


# CX1
if [[ $HOSTNAME =~ login-[0-9]+ ]]
then
    alias v='~/usr/local/bin/vim'
    alias a='availability'
    alias eph="cd $EPHEMERAL"
    alias q='qstat -a'
    alias cy='grep "MAX G" -A3'
    alias coor='grep "ALPHA" -A1'
    alias en='grep "TOTAL EN"'
    alias conv='grep "OPT END"'
    alias etot='grep ETOT'
    alias spin='grep SUMMED'
    alias vsub='vi ~/bin/sub'
    alias lsout='ls *.out'
else
    alias j='nohup jupyter notebook > /dev/null &'
    alias cx1='ssh -t cx1 "~/usr/local/bin/bash -l"'
    alias nhpc='ssh carles@nhpc16.ch.ic.ac.uk'
fi

# White City Desktop
if [ $(uname) == "Linux" ]
then
    if [ $(sed -n '/^NAME=/s/.*"\(.*\)"/\1/p') == "Arch Linux" ]
    then
        alias feh='feh --scale-down --auto-zoom'
        alias p='pacman'
        alias sp='sudo pacman'
        alias v='/usr/bin/vim'
    fi
fi

# MacAir
if [ $(uname) == "Darwin" ]
then
    alias v='/usr/local/bin/vim'
    alias run='runcry14'
    alias runprop='runprop14'
fi

# Aliases
alias h='cd $HOME' 
alias ls='\ls -pG' 
alias lsh='ls -d .*'
alias sv='sudo v'
alias sb='source ~/.bashrc'
alias vb='v ~/.bashrc'
alias val='v ~/.alias'
alias vrc='v ~/.vimrc'
alias r='ranger'
alias grep='grep --color=auto'
alias ds='conda activate data_science'
alias cact='conda activate'
alias cdeact='conda deactivate'

# For git
alias gitdf="/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME"
alias g='git'
alias gr='git reset --hard'
alias gs='git status'
alias ga='git add -u'
alias gb='git branch -avv'
alias gc='git commit -m'
alias gch='git checkout'
alias gp='git push'
alias gl='git log --oneline --graph --all'
alias gt='git ls-tree --full-tree --name-only -r HEAD'
alias gtdf='gitdf ls-tree --full-tree --name-only -r HEAD'

# Functions
push () {
    if [ $# -eq 1 ]
    then
        git commit -am "$1"
    else
        git commit -am 'Fast push'
    fi
    git push
}

pull () {
    git reset --hard
    git pull
}

pushdf () {
    gitdf add -u
    if [ $# -eq 1 ]
    then
        echo $1
        gitdf commit -m "$1"
    else
        gitdf commit -m 'Updated dotfiles'
    fi
    gitdf push
}

pulldf () {
    gitdf reset --hard
    gitdf pull
}

shopt -s extglob
extract() {
    local c e i

    (($#)) || return

    for i; do
        c=''
        e=1

        if [[ ! -r $i ]]; then
            echo "$0: file is unreadable: \`$i'" >&2
            continue
        fi

        case $i in
            *.t@(gz|lz|xz|b@(2|z?(2))|a@(z|r?(.@(Z|bz?(2)|gz|lzma|xz)))))
                   c=(bsdtar xvf);;
            *.7z)  c=(7z x);;
            *.Z)   c=(uncompress);;
            *.bz2) c=(bunzip2);;
            *.exe) c=(cabextract);;
            *.gz)  c=(gunzip);;
            *.rar) c=(unrar x);;
            *.xz)  c=(unxz);;
            *.zip) c=(unzip);;
            *)     echo "$0: unrecognized file extension: \`$i'" >&2
                   continue;;
        esac

        command "${c[@]}" "$i"
        ((e = e || $?))
    done
    return "$e"
}

# NNN functions
n()
{
    # The default behaviour is to cd on quit (nnn checks if NNN_TMPFILE is set)
    # To cd on quit only on ^G, export NNN_TMPFILE after the call to nnn
    export NNN_TMPFILE=${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd

    nnn "$@"

    if [ -f $NNN_TMPFILE ]; then
            . $NNN_TMPFILE
            rm -f $NNN_TMPFILE > /dev/null
    fi
}
bind '"\C-f":"n\r"'
